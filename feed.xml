<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>Andrew Long</title><subtitle>Blog & Such</subtitle><updated>2022-09-25T22:55:08-07:00</updated><id>LongestBoi.github.io/</id><generator uri="https://sparanoid.com/lab/amsf/" version="2.0.19">Almace Scaffolding</generator><link rel="alternate" type="text/html" hreflang="en" href="LongestBoi.github.io/" /><link rel="self" type="application/atom+xml" href="LongestBoi.github.io/feed.xml" /><author><name>Andrew Long</name><uri>LongestBoi.github.io/</uri><email>AndrewRLong02@gmail.com</email></author><entry><title>Project 1&amp;#58; Engine Basics Teachback</title><id>LongestBoi.github.io/2022/09/project-1-engine-basics-teachback.html</id><link rel="alternate" type="text/html" href="LongestBoi.github.io/2022/09/project-1-engine-basics-teachback.html" /><published>2022-09-25T00:00:00-07:00</published><updated>2022-09-25T22:53:37-07:00</updated><author><name>Andrew Long</name><uri>https://LongestBoi.github.io/</uri><email>AndrewRLong02@gmail.com</email></author><content type="html" xml:base="LongestBoi.github.io/">
          
            &lt;script&gt;window.top.document.title = &quot;Project 1: Engine Basics Teachback&quot;;&lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/pcss/classwork.css&quot; /&gt;

&lt;div style=&quot;display: inline-block;&quot;&gt;
	&lt;head1 style=&quot;text-align: center;&quot;&gt;The Basic Setup of Unity VR on Linux&lt;/head1&gt;
	&lt;hr class=&quot;line&quot; style=&quot;width: 100%;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img title=&quot;Unity Logo&quot; class=&quot;cImg&quot; style=&quot;width: 60% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/logo-unity-web.png&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;indent&quot;&gt;
Getting Unity up and running on Linux is incredibly easy. To start, we'll install Unity Hub &amp;amp; Unity. Next, we'll import libraries and settings for VR. After that, we'll import an art asset into our scene. Lastly, we'll import &amp;amp; activate VR controls which will allow the player to look around our scene. So let's get started!
&lt;/p&gt;
&lt;break&gt;&lt;/break&gt;

&lt;div class=&quot;toc&quot;&gt;
	&lt;div class=&quot;tocHead&quot;&gt;Contents:&lt;/div&gt;
	&lt;hr class=&quot;line&quot; style=&quot;width: 100%;&quot; /&gt;
	&lt;ol&gt;
		&lt;li&gt;&lt;a href=&quot;#install&quot;&gt;Installing Unity on Linux&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href=&quot;#create&quot;&gt;Creating a new project&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href=&quot;#import&quot;&gt;Importing assets into your project&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
	&lt;/ol&gt;
&lt;/div&gt;
&lt;break&gt;&lt;/break&gt;

&lt;div id=&quot;install&quot; style=&quot;display: inline-block;&quot;&gt;
	&lt;head2&gt;Installing Unity on Linux:&lt;/head2&gt;
	&lt;hr class=&quot;line&quot; style=&quot;width: 100%;&quot; /&gt;
&lt;/div&gt;
&lt;p class=&quot;indent&quot;&gt;
To start, you'll want to install Unity Hub. 
It can be installed in a few ways. You can run the Unity Hub from an appimage by going to 
&lt;a class=&quot;underline&quot; href=&quot;https://unity3d.com/get-unity/download&quot;&gt;Unity3D.com,&lt;/a&gt; 
clicking download Unity Hub, then running: &lt;br /&gt;&lt;code&gt;./unityhub.appimage&lt;/code&gt; in the directory of the appimage.&lt;/p&gt;
&lt;p&gt;The other way of installing Unity Hub is through a package manager.&lt;/p&gt;
&lt;p&gt;On Ubuntu run this line to add the Unity Hub repository:
	&lt;code style=&quot;display: block;&quot;&gt;
		&lt;unselect&gt;$ &lt;/unselect&gt;sudo sh -c 'echo &quot;deb https://hub.unity3d.com/linux/repos/deb stable main&quot; &amp;gt; /etc/apt/sources.list.d/unityhub.list'
	&lt;/code&gt;
	then, add the public key with:
	&lt;code style=&quot;display: block;&quot;&gt;
		&lt;unselect&gt;$ &lt;/unselect&gt;wget -qO - https://hub.unity3d.com/linux/keys/public | sudo apt-key add -
	&lt;/code&gt;
	now, update your package cache and install the package:
	&lt;code style=&quot;display: block;&quot;&gt;
		&lt;unselect&gt;$ &lt;/unselect&gt;sudo apt update&lt;br /&gt;
		&lt;unselect&gt;$ &lt;/unselect&gt;sudo apt-get install unityhub
	&lt;/code&gt;
	If you are on any other Linux distro besides Debian based ones, refer to the 
	&lt;a class=&quot;underline&quot; href=&quot;https://docs.unity3d.com/hub/manual/InstallHub.html#install-hub-linux&quot;&gt;Unity3D docs&lt;/a&gt;.
&lt;/p&gt;
&lt;break&gt;&lt;/break&gt;

&lt;div id=&quot;create&quot; style=&quot;display: inline-block;&quot;&gt;
	&lt;head2&gt;Creating a new project:&lt;/head2&gt;
	&lt;hr class=&quot;line&quot; style=&quot;width: 100%;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img title=&quot;Unity's New projects page.&quot; class=&quot;cImg&quot; style=&quot;width: 100% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/unity-new-project-page.png&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;indent&quot;&gt;It's super simple to create a new project in Unity. Open the Unity Hub and under the projects tab on the left side, click the blue &quot;New Project&quot; button.&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;Creating a new project in Unity.&quot; class=&quot;cImg&quot; style=&quot;width: 100% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/unity-create-project-page.png&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;indent&quot;&gt;Once your in the New project dialog, scroll down to VR and click on it, click &quot;Download template&quot;, change the project name, and finally, click the &quot;Create project&quot; button!&lt;/p&gt;
&lt;break&gt;&lt;/break&gt;

&lt;div id=&quot;import&quot; style=&quot;display: inline-block;&quot;&gt;
	&lt;head2&gt;Importing assets into your project:&lt;/head2&gt;
	&lt;hr class=&quot;line&quot; style=&quot;width: 100%;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img title=&quot;New unity project in the editor&quot; class=&quot;cImg&quot; style=&quot;width: 100% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/new-unity-project-editor.png&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;indent&quot;&gt;Importing assets into your project is also incredibly easy. To start make a folder for your textures named &lt;code&gt;Textures&lt;/code&gt;. Then, get the texture you want to import and drag it into the newly created folder.&lt;/p&gt;
&lt;p class=&quot;indent&quot;&gt;The texture I'll be importing is one that I made a while ago. The texture is one of the tiles in my old dorm room.&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;Beige_Tile.jpg&quot; class=&quot;cImg&quot; style=&quot;width: 50% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/Beige_Tile.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When following the instructions above I get this:&lt;img title=&quot;Beige_Tile.jpg successfully imported into Unity!&quot; class=&quot;cImg&quot; style=&quot;width: 100% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/unity-succsessful-texture-import.png&quot; /&gt;Our texture was successfully imported into Unity!&lt;/p&gt;

&lt;p&gt;Now, to use it, drag it onto the &quot;plane&quot; object in either the heirarchy or scene window.&lt;br /&gt;Then you get:&lt;img title=&quot;Beige_Tile.jpg Texture succsessfully applied to the plane object!&quot; class=&quot;cImg&quot; style=&quot;width: 100% !important;&quot; src=&quot;/assets/img/Project 1 - engine basics teachback/unity-succsessful-texture-application.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Our imported texture is now applied to the plane! To get modify how it looks on the plane, select the plane object. Then in the inspector window, click on the material drop down.&lt;/p&gt;
&lt;break&gt;&lt;/break&gt;

&lt;div id=&quot;conclusion&quot; style=&quot;display: inline-block;&quot;&gt;
	&lt;head2&gt;Conclusion:&lt;/head2&gt;
	&lt;hr class=&quot;line&quot; style=&quot;width: 100%;&quot; /&gt;
&lt;/div&gt;

&lt;p class=&quot;indent&quot;&gt;After all of that, You should be able to mess around with VR development in Unity. If you have any issues my contact information is in the &lt;a class=&quot;underline&quot; href=&quot;/about/&quot;&gt;about&lt;/a&gt; section of this website.&lt;/p&gt;

          
          
        
      
        </content><summary>	The Basic Setup of Unity VR on Linux	Getting Unity up and running on Linux is incredibly easy. To start, we'll install Unity Hub &amp;amp; Unity. Next, we'll import libraries and settings for VR. After that, we'll import an art asset into our scene. Lastly, we'll import &amp;amp; activate VR controls which will allow the player to look around our scene. So let's get started!	Contents:				Installing Unity on Linux		Creating a new project		Importing assets into your project		Conclusion		Installing Unity on Linux:	To start, you'll want to install Unity Hub. It can be installed in a few ways. You can run the Unity Hub from an appimage by going to Unity3D.com, clicking download Unity Hub, then running: ./unityhub.appimage in the directory of the appimage.The other way of installing Unity Hub is through a package manager.On Ubuntu run this line to add the Unity Hub repository:			$ sudo sh -c 'echo &quot;deb https://hub.unity3d.com/linux/repos/deb stable main&quot; &amp;gt; /etc/apt/sources.list.d/unityhub.list'		then, add the public key with:			$ wget -qO - https://hub.unity3d.com/linux/keys/public | sudo apt-key add -		now, update your package cache and install the package:			$ sudo apt update		$ sudo apt-get install unityhub		If you are on any other Linux distro besides Debian based ones, refer to the 	Unity3D docs.	Creating a new project:	It's super simple to create a new project in Unity. Open the Unity Hub and under the projects tab on the left side, click the blue &quot;New Project&quot; button.Once your in the New project dialog, scroll down to VR and click on it, click &quot;Download template&quot;, change the project name, and finally, click the &quot;Create project&quot; button!	Importing assets into your project:	Importing assets into your project is also incredibly easy. To start make a folder for your textures named Textures. Then, get the texture you want to import and drag it into the newly created folder.The texture I'll be importing is one that I made a while ago. The texture is one of the tiles in my old dorm room.When following the instructions above I get this:Our texture was successfully imported into Unity!Now, to use it, drag it onto the &quot;plane&quot; object in either the heirarchy or scene window.Then you get:Our imported texture is now applied to the plane! To get modify how it looks on the plane, select the plane object. Then in the inspector window, click on the material drop down.	Conclusion:	After all of that, You should be able to mess around with VR development in Unity. If you have any issues my contact information is in the about section of this website.</summary></entry><entry><title>Games With a Sndata Header Section</title><id>LongestBoi.github.io/2021/03/games-with-a-sndata-header-section.html</id><link rel="alternate" type="text/html" href="LongestBoi.github.io/2021/03/games-with-a-sndata-header-section.html" /><published>2021-03-20T00:00:00-07:00</published><updated>2021-03-20T19:28:24-07:00</updated><author><name>Andrew Long</name><uri>https://LongestBoi.github.io/</uri><email>AndrewRLong02@gmail.com</email></author><content type="html" xml:base="LongestBoi.github.io/">
          
            &lt;style&gt;
  .excerpt {
    font-size: 60%;
    background-color: hsl(var(--bg-color-h), var(--bg-color-s), calc(var(--bg-color-l) * .7));
    padding: .5em .5em .5em .5em;
    border-radius: 8px;
    border: 2px solid;
    border-color: hsl(var(--bg-color-h), var(--bg-color-s), calc(var(--bg-color-l) / .7));
    width: 100%;

  }

  .excerpt&gt;p {
    margin-bottom: unset;
  }

  summary {
    font-weight: bold;
  }

  summary:hover {
    font-weight: bold;
    color: var(--link-color);
  }

  .content details {
    margin-bottom: unset;
  }

  h2.sernum {
    margin-left: 8px;
    margin-top: 5px;
    margin-bottom: unset !important;
  }

  .seps {
    font-size: 120%;
    padding-top: .5em;
    padding-bottom: .1em;
  }
&lt;/style&gt;

&lt;script&gt;
  // Borrowed from www.c-sharpcorner.com/blogs/load-text-file-in-javascript1
  function parseTXT(Textfile, ID) {
    var txtFile = new XMLHttpRequest();
    txtFile.open(&quot;GET&quot;, Textfile, true);
    txtFile.onreadystatechange = function() {
      if (txtFile.readyState === 4) {
        // Makes sure the document is ready to parse.
        if (txtFile.status === 200) {
          // Makes sure it's found the file.
          var temp = txtFile.responseText;
          temp = temp.replaceAll(&quot;\n&quot;, &quot;&lt;br&gt;&quot;);

          document.getElementById(ID).innerHTML = temp;
          temp = null;
        }
      }
    }
    txtFile.send(null)
  }
&lt;/script&gt;

&lt;h1&gt;Sndata Header section.&lt;/h1&gt;
&lt;p&gt;&lt;small&gt;
  The SN Systems PRODG PS2 SDK will leave a section header labeled “.sndata” this header section contains debug symbols.
  The section header is, unfortunately, proprietary.
  However, based on the work of &lt;a href=&quot;https://twitter.com/diwidog/status/1188831332635267072&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Kiwidoggie&lt;/a&gt;,
  I’ve written a Python script to go to the section header and find the memory address location of the functions and function names.
  Then, take those functions and function names and put them into a “.txt” for Ghidra or a Python script for IDA (untested).
&lt;/small&gt;&lt;/p&gt;

&lt;!--end_excerpt--&gt;

&lt;h2 style=&quot;font-size: 70%; margin-top: unset;&quot;&gt;
  &lt;a href=&quot;https://github.com/Longestboi/sndata-converter&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Sndata-converter.py&lt;/a&gt;
&lt;/h2&gt;

&lt;hr /&gt;

&lt;div&gt;
  &lt;h1&gt;List games with .sndata header sections.&lt;/h1&gt;
  &lt;p style=&quot;font-size: 80%; margin-bottom: unset;&quot;&gt;Click on the game title to view debug symbols in Ghidra format&lt;/p&gt;

  

  

  &lt;h1 class=&quot;seps&quot;&gt;Retail Games&lt;/h1&gt;

  &lt;!-- AFL Premiership 2006 --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/AFLP06d.txt', 'AFLP06d')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;AFL Premiership 2006 (Demo)
        &lt;h2 class=&quot;sernum&quot;&gt;SCES-54068&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a href=&quot;/assets/txt/AFLP06d.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;97 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;AFLP06d&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  &lt;!-- MLB 2005 --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/MLB05.txt', 'MLB05')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;MLB 2005
        &lt;h2 class=&quot;sernum&quot;&gt;SCUS-97326&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a style=&quot;&quot; href=&quot;/assets/txt/MLB05.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;3978 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;MLB05&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  &lt;!-- MLB 2006 --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/MLB06.txt', 'MLB06')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;MLB 2006
        &lt;h2 class=&quot;sernum&quot;&gt;SCUS-97347&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a style=&quot;&quot; href=&quot;/assets/txt/MLB06.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;1773 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;MLB06&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  &lt;!-- My Street --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/myst.txt', 'MYST')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;My Street
        &lt;h2 class=&quot;sernum&quot;&gt;SCUS-97212&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;div style=&quot;display: flex;&quot;&gt;
      &lt;a href=&quot;/assets/txt/myst.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
      &lt;span&gt;
        &lt;h2 style=&quot;margin: unset; padding-left: 5px; font-size: 50%; margin-top: 1em;&quot;&gt;
          *Also has normal debug info
        &lt;/h2&gt;
      &lt;/span&gt;
      &lt;span class=&quot;pull-right&quot; style=&quot;font-weight: bold; margin: auto 0 auto auto;&quot;&gt;388 Symbols&lt;/span&gt;
    &lt;/div&gt;

    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;MYST&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  &lt;!-- Neopets: the Darkest Faerie --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/npdf.txt', 'NPDF')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;Neopets: the Darkest Faerie
        &lt;h2 class=&quot;sernum&quot;&gt;SCUS-97367&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a style=&quot;&quot; href=&quot;/assets/txt/npdf.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;396 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;NPDF&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  &lt;!-- Resident Evil 4 --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/re4.txt', 'RE4')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;Resident Evil 4
        &lt;h2 class=&quot;sernum&quot;&gt;SLUS-21134&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a href=&quot;/assets/txt/re4.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;7407 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;RE4&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  

  &lt;h1 class=&quot;seps&quot;&gt;Demos&lt;/h1&gt;

  &lt;!-- MLB 2006 (Demo) --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/MLB06d.txt', 'MLB06D')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;MLB 2006 (Demo)
        &lt;h2 class=&quot;sernum&quot;&gt;SCUS-97460&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a style=&quot;&quot; href=&quot;/assets/txt/MLB06d.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;1785 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;MLB06D&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;

  &lt;!-- Neopets: the Darkest Faerie (Demo) --&gt;
  &lt;details&gt;
    &lt;summary onclick=&quot;parseTXT('/assets/txt/npdfd.txt', 'NPDFD')&quot;&gt;
      &lt;div style=&quot;display: flex;&quot;&gt;Neopets: the Darkest Faerie (Demo)
        &lt;h2 class=&quot;sernum&quot;&gt;SCUS-97469&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/summary&gt;
    &lt;a href=&quot;/assets/txt/npdfd.txt&quot; download=&quot;&quot;&gt;⇩ Download&lt;/a&gt;
    &lt;span style=&quot;font-weight: bold; float:right;&quot;&gt;337 Symbols&lt;/span&gt;
    &lt;div class=&quot;excerpt&quot;&gt;&lt;code id=&quot;NPDFD&quot;&gt;&lt;/code&gt;&lt;/div&gt;
  &lt;/details&gt;
&lt;/div&gt;

          
          
        
      
        </content><summary>Sndata Header section.  The SN Systems PRODG PS2 SDK will leave a section header labeled “.sndata” this header section contains debug symbols.  The section header is, unfortunately, proprietary.  However, based on the work of Kiwidoggie,  I’ve written a Python script to go to the section header and find the memory address location of the functions and function names.  Then, take those functions and function names and put them into a “.txt” for Ghidra or a Python script for IDA (untested).</summary></entry></feed>
